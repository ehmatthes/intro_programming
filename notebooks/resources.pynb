{
 "metadata": {
  "name": "",
  "signature": "sha256:03447244b00fb07cf98b889b75f7fab4e489c8c614a7d3880a264f6cbe54caed"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Resources\n",
      "---\n",
      "\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "A preliminary list of tutorials, talks, and challenges is provided below. This page will be updated frequently.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Documentation\n",
      "---\n",
      "\n",
      "For information related to Python programming, always refer to the [official Python documentation](https://docs.python.org/3/) (v3.4)."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "---"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Tutorials\n",
      "--\n",
      "\n",
      "- Google Python class - YouTube videos\n",
      "\n",
      "    [Part 1(1)](https://www.youtube.com/watch?v=tKTZoB2Vjuk) - Introduction to Python and strings\n",
      "    \n",
      "    [Part 1(2)](https://www.youtube.com/watch?v=EPYupizJYQI) - Working with lists, tuples and sorting\n",
      "    \n",
      "    [Part 1(3)](https://www.youtube.com/watch?v=haycL41dAhg) - Working with dictionaries and files\n",
      "    \n",
      "    [Part 2(1)](https://www.youtube.com/watch?v=kWyoYtvJpe4) - Regular expressions\n",
      "    \n",
      "    [Part 2(2)](https://www.youtube.com/watch?v=uKZ8GBKmeDM) - Using modules, system commands\n",
      "    \n",
      "    [Part 2(3)](https://www.youtube.com/watch?v=Nn2KQmVF5Og) - Exceptions, parsing URLs\n",
      "    \n",
      "    [Part 2(4)](https://www.youtube.com/watch?v=IcteAbMC1Ok) - List comprehensions\n",
      "\n",
      "\n",
      "- [Guide for beginners who are non-programmers](https://wiki.python.org/moin/BeginnersGuide/NonProgrammers)\n",
      "\n",
      "    Python's wiki page lists several resources for beginners.\n",
      "\n",
      "\n",
      "- [Python Tutor](http://pythontutor.com/)\n",
      "\n",
      "    Python Tutor visually helps understand how code executes on a computer."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "---"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Talks\n",
      "--\n",
      "\n",
      "Pyvideos - Videos related to Python programming in different events including [Pycon](http://www.pycon.org/), [Scipy](https://conference.scipy.org/).\n",
      "\n",
      "Example: [Fast Python, Slow Python at Pycon 2014](http://pyvideo.org/video/2627/fast-python-slow-python)"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "---"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Challenges\n",
      "--\n",
      "\n",
      "If you are equipped with basics of Python, taking up challenges is a great way to implement the skills.\n",
      "\n",
      "- [Google Python class exercises](https://developers.google.com/edu/python/exercises/basic)\n",
      "\n",
      "    Four exercises are provided as part of the Python class by Google. \n",
      "    \n",
      "    Level - Basic/intermediate\n",
      "    \n",
      "\n",
      "- [Project Euler](https://projecteuler.net/)\n",
      "\n",
      "    Project Euler is a project of mathematical/programming challenges aimed at designing efficient solutions. Project Euler is a good place to challenge your mathematical and programming skills. Most of the problems can be solved within few seconds provided you have an efficient solution.\n",
      "\n",
      "    Level - Advanced | Requires knowledge of mathematics.\n",
      "\n",
      "\n",
      "- [Python Challenge](http://www.pythonchallenge.com/)\n",
      "\n",
      "    Level - Intermediate/Advanced\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "metadata": {}
  }
 ]
}
